package com.github.cwilper.fcrepo.cloudsync.service.dao;

import com.github.cwilper.fcrepo.cloudsync.api.User;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.ResultSetExtractor;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.security.core.context.SecurityContextHolder;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

public class UserDao extends AbstractDao {

    public UserDao(JdbcTemplate db) {
        super(db);
    }

    @Override
    public void initDb() {
        db.execute("create table Users (id INTEGER PRIMARY KEY NOT NULL GENERATED BY DEFAULT AS IDENTITY, "
                + "name varchar(64) not null, "
                + "constraint UsersUnique unique (name))");
        db.execute("insert into Users (name) values ('admin')");

        /*
        db.execute("create table Users (id int not null generated by default as identity, "
                + "username varchar(50) not null, constraint UsersPk primary key (id), "
                + "constraint UsersUnique unique (username), password varchar(50) not null, "
                + "enabled boolean not null)");
                */
    }

    public User createUser(final User user) {
        // TODO: Implement
        return null;
    }

    public List<User> listUsers() {
        return db.query("select * from Users",
                new RowMapper<User>() {
                    public User mapRow(ResultSet rs, int i) throws SQLException {
                        return getUser(rs);
                    }
                });
    }

    public User getUser(String id) {
        return db.query("select * from Users where id = ?",
                new ResultSetExtractor<User>() {
                    public User extractData(ResultSet rs)
                            throws SQLException {
                        if (rs.next()) {
                            return getUser(rs);
                        } else {
                            return null;
                        }
                    }
                },
                Integer.parseInt(id));
    }

    private static User getUser(ResultSet rs) throws SQLException {
        User u = new User();
        u.setId("" + rs.getInt("id"));
        u.setName(rs.getString("name"));
        return u;
    }

    public User getCurrentUser() {
        return getUser("" + getUserId(getCurrentUserName()));
    }

    public User updateUser(String id, User user) {
        // TODO: Implement
        return null;
    }

    public void deleteUser(String id) {
        db.update("delete from Users where id = ?", Integer.parseInt(id));
    }

    private static String getCurrentUserName() {
        org.springframework.security.core.userdetails.User u =
                (org.springframework.security.core.userdetails.User)
                        SecurityContextHolder.getContext().getAuthentication().getPrincipal();
        if (u == null) return null;
        return u.getUsername();
    }

    private Integer getUserId(String name) {
        if (name == null) return null;
        return db.query("select id from Users where name = ?",
                new ResultSetExtractor<Integer>() {
                    public Integer extractData(ResultSet rs) throws SQLException {
                        if (rs.next()) {
                            return rs.getInt("id");
                        } else {
                            return null;
                        }
                    }
                },
                name);
    }

}